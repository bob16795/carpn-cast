import "src/hitrecord.car"
import "src/vec3.car"
import "src/texture.car"

struct Lambertian {
    Texture albedo

    def proc new Texture : Self {
        Self result

        result.albedo swap =

        result@
    }

    def proc emit Self* f32 f32 Vec3 : Color {
        disc disc disc disc
        0.0 0.0 0.0 Color.new
    }

    def proc scatter Self* HRay HitRecord* Color* HRay* : bool {
        => scattered
        => attenuation 
        => record
        => in
        => self

        Vec3 scatter_direction

        scatter_direction record.normal@ Vec3.random_unit_vector Vec3.add =

        scatter_direction@ Vec3.near_zero if {
            scatter_direction record.normal@ =
        }

        scattered.orig record.p@ =
        scattered.dir scatter_direction@ =
        scattered.time in.time = 
        attenuation self.albedo@ record.u@ record.v@ record.p Texture.value = 

        true
    }
}